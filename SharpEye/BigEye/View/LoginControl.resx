<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        BwAAAk1TRnQBSQFMAgEBBAEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AlgADDAEQAwABAfQA
        AyQBNgNLAY4DGQEjeAAE/xwAAwMBBAMdASkDOAFeA0ABcQMxAU8DEQEXAwABASQAAwMBBAMdASkDOAFe
        A0EBcgMyAVADEQEXAycBOgNKAdcDUAGkAw4BE3QABP8DpQHlFwABAQM1AVgDVgG9Ax0B+gMAAf8DAAH/
        AwAB/wM9Ae4DUAGfAyABLxsAAQEDNQFYA1YBvQMdAfoDAAH/AwAB/wMAAf8DPAHuAy4B9ANUAasDBQEH
        GAADDAEQGP8DuwHuIAADDAEQHP8DpQHlEwABAQMVAR0DTwGeAwAB/wMTAfkDTQHSA0wBkgNCAXQDUgGm
        Az0B4wMIAf0DOQHzAzgBXgMKAQ0LAAEBAxUBHQNPAZ4DAAH/AxMB+QNNAdIDTAGSA0IBdANTAccDHAH1
        A1EBpwMRARcDJwE6AwoBDRAAA6kB5wz/AzQBVAMFAQcDWAGmDP8DIwEzFAADqQHnDP8DNAFUAwQBBQNd
        AbAE/wOlAeUEAAMiATIMAAMUARsDUQGhAxsB9gMAAf8DUwHDAyABLwMtAUUDRAF8AyIBMQM3AVsDPQHj
        AwAB/wMzAeoDOQFgAwMBBAQAAxQBGwNRAaEDGwH2AwAB/wNTAcMDIAEvAy0BRQNEAXwDUwHAA1EBoAMc
        AScDTgGZA0UB5QM5AWADBAEFCAADxgHxDP8UAAz/Ax0BKgwAA8YB8Qz/DAAE/wOlAeUEAAN4Ac0E/wMf
        ASwIAAM/AW0DGwH2AwAB/wMAAf8DNQFWAzgBXgNLAdsDCwH9A1IBswMiATEDUQGnAwAB/wMAAf8DTwHX
        AyYBOAQAAz8BbQMbAfYDAAH/AwAB/wM1AVYDOAFeA0sB2wMLAf0DTwGcAxYBHwNAAXADFQH7AwAB/wNP
        AdcDJgE5BAADLAFDDP8EAAMFAQcM/wQAA1gBpgz/CAADLAFDDP8EAAMFAQcI/wOlAeUEAANQAZQM/wgA
        A1QBzQMAAf8DAAH/AwAB/wMQARUDTwGlAwAB/wMAAf8DCwH9A0QBfANCAXQDAAH/AwAB/wMAAf8DSwGP
        BAADVAHNAwAB/wMAAf8DAAH/AxABFQNPAaUDAAH/A1YB5QMHAQkDBAEGA0IBdAMAAf8DAAH/AwAB/wNL
        AZAEABD/BAAD3gH4DP8EAAMFAQcM/wNwAccEABD/BAAD3gH4BP8DpQHlCAADBAEFDP8DdgHKBAADSwGP
        AwoB/QMAAf8DAAH/AyYBOQNFAX0DHgH0AwAB/wNLAdsDLQFFA0wBkwMAAf8DAAH/AzIB7gM0AVQEAANL
        AY8DCgH9AwAB/wMAAf8DOwFlA1ABxgNPAZ0DBwEJAz8BbAMoAT0DTAGTAwAB/wMAAf8DMgHuAzQBVAQA
        A4AB0gz/BAADQQFyDP8EAAM0AVQM/wMAAQEEAAOGAdYM/wQABP8DpQHlBAADdwHLBAADNAFUDP8DAAEB
        BAADIAEvA1QBxAMMAfwDAAH/A08BngMgAS4DRQF9A08BpQM4AV4DIAEvA00B0gMAAf8DGwH2A0wBkgMP
        ARQEAAMhATADVAHFAwwB/AMAAf8DRgHmA1EBoAMWAR8DGgEkAzUBVgMgAS8DTQHSAwAB/wMbAfYDTAGS
        Aw8BFAgADP8DWgGnBAADQQFyA94B+AMFAQcEAAz/A48B2wwAEP8DpQHlBAADbwHDAwUBBwQADP8DjwHb
        CAADAwEEAyoBQANIAdkDAAH/Ay0B8QNPAZ4DJgE5AxABFQM1AVYDUgHCAxMB+QMAAf8DUwGtAxUBHQgA
        AwMBBAMqAUADSAHZAwAB/wNRAacDGgEkAxIBGQMNAREDNQFWA1IBwgMTAfkDAAH/A1MBrQMVAR0QAAz/
        A1oBpwwADP8D0wH2FAAI/wOlAeUQAAz/A9IB9RQAAxsBJgNQAaQDCgH9AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DTQHoA0IBdQMEAQUQAAMkATYDSgHXA1QBqwMRARcDTgGZAxUB+wMAAf8DAAH/AwAB/wNNAegDQgF1
        AwQBBRgAA7sB7xz/Az0BZxgABP8DpQHlBAADdgHMFP8DPAFmIAADHwEtA0kBiANUAbIDUAG+A1IBqANA
        AXADEAEVFAADFgEfA1IBqwNSAaYDBQEHAxMBGgNIAYMDUwGzA1ABvgNSAagDQAFvAxABFSgAAzYBWQOP
        AdsD5wH7A2YBvAMQARUcAAT/A6UB5QgAAzcBWwOTAd4D5wH7A2YBuwMQARVYAAMSARgDMwFTAxIBGHgA
        A2kBv/8A/wA2AAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAD/wH5B/8B8QP/
        AfsB+AEPAfgBAQP/AfMB4AEHAeABAwHwAQ8B8AEHAYABAQGAAQEB4AEDAeABCwGAAQABgAEAAcMB4QHD
        AZEBgAEAAYABAAGEASEBhAEhAYABAAGAAQABhAEgAYQBYAGAAQABgAEAAYQBIAGEAaABgAEAAYABAAHC
        ASEBwQEhAYABAQGAAQEB4QHDAeMBwwHgAQMBwAEDAfABBwHkAQcB+AEPAYABDwH8AR8BzAEfAv8BjwP/
        Ad8R/ws=
</value>
  </data>
</root>