<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        BwAAAk1TRnQBSQFMAgEBBAEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AlgADDAEQAwABAfQA
        AyQBNgNKAY4DGQEjeAAE/xwAAwMBBAMdASkDOAFeA0ABcQMxAU8DEQEXAwABASQAAwMBBAMdASkDOAFe
        A0EBcgMyAVADEQEXAycBOgNDAdcDUAGkAw4BE3QABP8DtAHlFwABAQM1AVgDVAG9AxwB+gMAAf8DAAH/
        AwAB/wM5Ae4DUAGfAyABLxsAAQEDNQFYA1QBvQMcAfoDAAH/AwAB/wMAAf8DOAHuAysB9ANUAasDBQEH
        GAADDAEQGP8DyAHuIAADDAEQHP8DtAHlEwABAQMVAR0DTQGeAwAB/wMPAfkDRgHSA0wBkgNCAXQDUQGm
        AzUB4wMHAf0DNgHzAzgBXgMKAQ0LAAEBAxUBHQNNAZ4DAAH/Aw8B+QNGAdIDTAGSA0IBdANRAccDGAH1
        A1ABpwMRARcDJwE6AwoBDRAAA7gB5wz/AzQBVAMFAQcDYAGmDP8DIwEzFAADuAHnDP8DNAFUAwQBBQNn
        AbAE/wO0AeUEAAMiATIMAAMUARsDTwGhAxgB9gMAAf8DUAHDAyABLwMtAUUDRAF8AyIBMQM3AVsDNQHj
        AwAB/wMqAeoDOQFgAwMBBAQAAxQBGwNPAaEDGAH2AwAB/wNQAcMDIAEvAy0BRQNEAXwDTgHAA08BoAMc
        AScDTQGZAz4B5QM5AWADBAEFCAAD0wHxDP8UAAz/Ax0BKgwAA9MB8Qz/DAAE/wO0AeUEAAOIAc0E/wMf
        ASwIAAM/AW0DGAH2AwAB/wMAAf8DNQFWAzgBXgNFAdsDCgH9A08BswMiATEDUAGnAwAB/wMAAf8DSQHX
        AyYBOAQAAz8BbQMYAfYDAAH/AwAB/wM1AVYDOAFeA0UB2wMKAf0DTgGcAxYBHwNAAXADEwH7AwAB/wNJ
        AdcDJgE5BAADLAFDDP8EAAMFAQcM/wQAA2ABpgz/CAADLAFDDP8EAAMFAQcI/wO0AeUEAANUAZQM/wgA
        A1ABzQMAAf8DAAH/AwAB/wMQARUDSwGlAwAB/wMAAf8DCgH9A0QBfANCAXQDAAH/AwAB/wMAAf8DSgGP
        BAADUAHNAwAB/wMAAf8DAAH/AxABFQNLAaUDAAH/A1QB5QMHAQkDBAEGA0IBdAMAAf8DAAH/AwAB/wNL
        AZAEABD/BAAD5QH4DP8EAAMFAQcM/wN+AccEABD/BAAD5QH4BP8DtAHlCAADBAEFDP8DhQHKBAADSgGP
        AwkB/QMAAf8DAAH/AyYBOQNEAX0DGAH0AwAB/wNFAdsDLQFFA0wBkwMAAf8DAAH/AywB7gM0AVQEAANK
        AY8DCQH9AwAB/wMAAf8DOwFlA0sBxgNNAZ0DBwEJAz8BbAMoAT0DTAGTAwAB/wMAAf8DLAHuAzQBVAQA
        A5AB0gz/BAADQwFyDP8EAAM0AVQM/wMAAQEEAAOWAdYM/wQABP8DtAHlBAADhgHLBAADNAFUDP8DAAEB
        BAADIAEvA08BxAMLAfwDAAH/A00BngMgAS4DRAF9A0sBpQM4AV4DIAEvA0YB0gMAAf8DGAH2A0sBkgMP
        ARQEAAMhATADUAHFAwsB/AMAAf8DQAHmA08BoAMWAR8DGgEkAzUBVgMgAS8DRgHSAwAB/wMYAfYDSwGS
        Aw8BFAgADP8DYQGnBAADQwFyA+UB+AMFAQcEAAz/A58B2wwAEP8DtAHlBAADfAHDAwUBBwQADP8DnwHb
        CAADAwEEAyoBQANCAdkDAAH/AyYB8QNNAZ4DJgE5AxABFQM1AVYDTwHCAw8B+QMAAf8DUgGtAxUBHQgA
        AwMBBAMqAUADQgHZAwAB/wNQAacDGgEkAxIBGQMNAREDNQFWA08BwgMPAfkDAAH/A1IBrQMVAR0QAAz/
        A2EBpwwADP8D3QH2FAAI/wO0AeUQAAz/A90B9RQAAxsBJgNQAaQDCQH9AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DSQHoA0IBdQMEAQUQAAMkATYDQwHXA1QBqwMRARcDTQGZAxMB+wMAAf8DAAH/AwAB/wNJAegDQgF1
        AwQBBRgAA8kB7xz/Az0BZxgABP8DtAHlBAADhgHMFP8DPQFmIAADHwEtA0kBiANSAbIDSgG+A1ABqANA
        AXADEAEVFAADFgEfA1ABqwNRAaYDBQEHAxMBGgNIAYMDUQGzA0oBvgNQAagDQAFvAxABFSgAAzYBWQOf
        AdsD7QH7A3IBvAMQARUcAAT/A7QB5QgAAzgBWwOjAd4D7QH7A3IBuwMQARVYAAMSARgDMwFTAxIBGHgA
        A3cBv/8A/wA2AAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAD/wH5B/8B8QP/
        AfsB+AEPAfgBAQP/AfMB4AEHAeABAwHwAQ8B8AEHAYABAQGAAQEB4AEDAeABCwGAAQABgAEAAcMB4QHD
        AZEBgAEAAYABAAGEASEBhAEhAYABAAGAAQABhAEgAYQBYAGAAQABgAEAAYQBIAGEAaABgAEAAYABAAHC
        ASEBwQEhAYABAQGAAQEB4QHDAeMBwwHgAQMBwAEDAfABBwHkAQcB+AEPAYABDwH8AR8BzAEfAv8BjwP/
        Ad8R/ws=
</value>
  </data>
</root>