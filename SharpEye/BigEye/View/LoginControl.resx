<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADy
        BwAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AlgADDAEQAwABAfQA
        AyUBNgM9AY4DGgEjeAAE/xwAAwMBBAMdASkDOgFeA0MBcQMzAU8DEQEXAwABASQAAwMBBAMdASkDOgFe
        A0QBcgMzAVADEQEXAygBOgMqAdcDSQGkAw4BE3QABP8D4AHlFwABAQM1AVgDTQG9AxYB+gMAAf8DAAH/
        AwAB/wMtAe4DTgGfAyABLxsAAQEDNQFYA00BvQMWAfoDAAH/AwAB/wMAAf8DLAHuAyMB9ANUAasDBQEH
        GAADDQEQGP8D6gHuIAADDQEQHP8D4AHlEwABAQMWAR0DRgGeAwAB/wMHAfkDLAHSA0kBkgNEAXQDSQGm
        Ax0B4wMFAf0DLAHzAzQBXgMKAQ0LAAEBAxYBHQNGAZ4DAAH/AwcB+QMsAdIDSQGSA0QBdANFAccDDwH1
        A0kBpwMRARcDJwE6AwoBDRAAA+IB5wz/A0oBVAMFAQcDmwGmDP8DLAEzFAAD4gHnDP8DSgFUAwQBBQOl
        AbAE/wPgAeUEAAMrATIMAAMUARsDRQGhAw4B9gMAAf8DPwHDAyIELwFFAzsBfAMiATEDOQFbAx0B4wMA
        Af8DFwHqAzcBYAMDAQQEAAMUARsDRQGhAw4B9gMAAf8DPwHDAyIELwFFAzsBfAM4AcADRgGgAxwBJwNE
        AZkDKwHlAzcBYAMEAQUIAAPuAfEM/xQADP8DIwEqDAAD7gHxDP8MAAT/A+AB5QQAA8QBzQT/AyUBLAgA
        AzoBbQMRAfYDAAH/AwAB/wM2AVYDOwFeAy0B2wMIAf0DOwGzAyIBMQNJAacDAAH/AwEB/wM0AdcDJwE4
        BAADOgFtAxEB9gMAAf8DAAH/AzYBVgM7AV4DLQHbAwgB/QNHAZwDFwEfA0MBcAMPAfsDAQH/AzQB1wMn
        ATkEAAM6AUMM/wQAAwUBBwz/BAADmwGmDP8IAAM6AUMM/wQAAwUBBwj/A+AB5QQAA4kBlAz/CAADRgHN
        AwAB/wMAAf8DAAH/AxABFQMzAaUDAAH/AwAB/wMIAf0DOwF8A0QBdAMAAf8DAAH/AwAB/wM+AY8EAANG
        Ac0DAAH/AwAB/wMAAf8DEAEVAzMBpQMAAf8DTgHlAwcBCQMEAQYDRAF0AwAB/wMAAf8DAAH/Az8BkAQA
        EP8EAAP2AfgM/wQAAwUBBwz/A74BxwQAEP8EAAP2AfgE/wPgAeUIAAMEAQUM/wPCAcoEAANBAY8DBwH9
        AwAB/wMAAf8DJwQ5AX0DDQH0AwAB/wMtAdsDLwFFA0oBkwMAAf8DAAH/AxwB7gMyAVQEAANBAY8DBwH9
        AwAB/wMAAf8DOwFlAzUBxgNGAZ0DBwEJA0ABbAMqAT0DSgGTAwAB/wMAAf8DHAHuAzIBVAQAA8oB0gz/
        BAADZwFyDP8EAANKAVQM/wMAAQEEAAPPAdYM/wQABP8D4AHlBAADwwHLBAADSgFUDP8DAAEBBAADIQEv
        Az0BxAMJAfwDAAH/A0UBngMhAS4DOQF9AzMBpQM7AV4DIgEvAywB0gMAAf8DDgH2A0IBkgMPARQEAAMh
        ATADPAHFAwkB/AMAAf8DMQHmA0YBoAMXAR8DGgEkAzgBVgMiAS8DLAHSAwAB/wMOAfYDQgGSAw8BFAgA
        DP8DnAGnBAADZwFyA/YB+AMFAQcEAAz/A9UB2wwAEP8D4AHlBAADugHDAwUBBwQADP8D1QHbCAADAwEE
        AysBQAMpAdkDAAH/AxgB8QNFAZ4DJwE5AxABFQM2AVYDPgHCAwcB+QMAAf8DSQGtAxYBHQgAAwMBBAMr
        AUADKQHZAwAB/wNJAacDGgEkAxIBGQMNAREDNgFWAz4BwgMHAfkDAAH/A0kBrQMWAR0QAAz/A5wBpwwA
        DP8D8wH2FAAI/wPgAeUQAAz/A/IB9RQAAxsBJgNQAaQDBwH9AwAB/wMAAf8DAAH/AwAB/wMAAf8DQAHo
        A0IBdQMEAQUQAAMlATYDKgHXA1QBqwMRARcDRAGZAw8B+wMAAf8DAAH/AwAB/wNAAegDQgF1AwQBBRgA
        A+sB7xz/A1wBZxgABP8D4AHlBAADxAHMFP8DWwFmIAADIAEtA0sBiANEAbIDKwG+A0wBqANCAXADEAEV
        FAADFwEfA0ABqwNLAaYDBQEHAxQBGgNKAYMDQAGzAysBvgNMAagDQgFvAxABFSgAA04BWQPVAdsD+QH7
        A7IBvAMRARUcAAT/A+AB5QgAA1EBWwPXAd4D+QH7A7EBuwMRARVYAAMSARgDNgFTAxIBGHgAA7YBv/8A
        /wA2AAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAD/wH5B/8B8QP/AfsB+AEP
        AfgBAQP/AfMB4AEHAeABAwHwAQ8B8AEHAYABAQGAAQEB4AEDAeABCwGAAQABgAEAAcMB4QHDAZEBgAEA
        AYABAAGEASEBhAEhAYABAAGAAQABhAEgAYQBYAGAAQABgAEAAYQBIAGEAaABgAEAAYABAAHCASEBwQEh
        AYABAQGAAQEB4QHDAeMBwwHgAQMBwAEDAfABBwHkAQcB+AEPAYABDwH8AR8BzAEfAv8BjwP/Ad8R/ws=
</value>
  </data>
</root>