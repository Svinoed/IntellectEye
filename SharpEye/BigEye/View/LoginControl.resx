<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        BwAAAk1TRnQBSQFMAgEBBAEAAUABAAFAAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AlgADDAEQAwABAfQA
        AyQBNgNLAY4DGQEjeAAE/xwAAwMBBAMdASkDOAFeA0ABcQMxAU8DEQEXAwABASQAAwMBBAMdASkDOAFe
        A0EBcgMyAVADEQEXAycBOgNZAdcDUAGkAw4BE3QABP8DfwHlFwABAQM1AVgDVwG9AyEB+gMAAf8DAAH/
        AwAB/wNKAe4DUAGfAyABLxsAAQEDNQFYA1cBvQMhAfoDAAH/AwAB/wMAAf8DSQHuAz0B9ANUAasDBQEH
        GAADDAEQGP8DlQHuIAADDAEQHP8DfwHlEwABAQMVAR0DUAGeAwAB/wMdAfkDWQHSA0wBkgNCAXQDUgGm
        A1EB4wMMAf0DQQHzAzgBXgMKAQ0LAAEBAxUBHQNQAZ4DAAH/Ax0B+QNZAdIDTAGSA0IBdANZAccDLQH1
        A1EBpwMRARcDJwE6AwoBDRAAA4EB5wz/AzQBVAMFAQcDVAGmDP8DIwEzFAADgQHnDP8DNAFUAwQBBQNV
        AbAE/wN/AeUEAAMiATIMAAMUARsDUQGhAyoB9gMAAf8DWQHDAyABLwMtAUUDRAF8AyIBMQM3AVsDUQHj
        AwAB/wNHAeoDOQFgAwMBBAQAAxQBGwNRAaEDKgH2AwAB/wNZAcMDIAEvAy0BRQNEAXwDWAHAA1EBoAMc
        AScDTgGZA1QB5QM5AWADBAEFCAADogHxDP8UAAz/Ax0BKgwAA6IB8Qz/DAAE/wN/AeUEAANgAc0E/wMf
        ASwIAAM/AW0DKgH2AwAB/wMAAf8DNQFWAzgBXgNYAdsDDwH9A1YBswMiATEDUQGnAwAB/wMAAf8DWQHX
        AyYBOAQAAz8BbQMqAfYDAAH/AwAB/wM1AVYDOAFeA1gB2wMPAf0DTwGcAxYBHwNAAXADHQH7AwAB/wNZ
        AdcDJgE5BAADLAFDDP8EAAMFAQcM/wQAA1QBpgz/CAADLAFDDP8EAAMFAQcI/wN/AeUEAANOAZQM/wgA
        A1oBzQMAAf8DAAH/AwAB/wMQARUDTwGlAwAB/wMAAf8DDwH9A0QBfANCAXQDAAH/AwAB/wMAAf8DSwGP
        BAADWgHNAwAB/wMAAf8DAAH/AxABFQNPAaUDAAH/A1sB5QMHAQkDBAEGA0IBdAMAAf8DAAH/AwAB/wNL
        AZAEABD/BAADwwH4DP8EAAMFAQcM/wNcAccEABD/BAADwwH4BP8DfwHlCAADBAEFDP8DYAHKBAADSwGP
        Aw4B/QMAAf8DAAH/AyYBOQNFAX0DLgH0AwAB/wNYAdsDLQFFA0wBkwMAAf8DAAH/A0QB7gM0AVQEAANL
        AY8DDgH9AwAB/wMAAf8DOwFlA1gBxgNQAZ0DBwEJAz8BbAMoAT0DTAGTAwAB/wMAAf8DRAHuAzQBVAQA
        A2QB0gz/BAADQQFyDP8EAAM0AVQM/wMAAQEEAANoAdYM/wQABP8DfwHlBAADYAHLBAADNAFUDP8DAAEB
        BAADIAEvA1kBxAMQAfwDAAH/A1ABngMgAS4DRQF9A08BpQM4AV4DIAEvA1kB0gMAAf8DKgH2A0wBkgMP
        ARQEAAMhATADVwHFAxAB/AMAAf8DUwHmA1EBoAMWAR8DGgEkAzUBVgMgAS8DWQHSAwAB/wMqAfYDTAGS
        Aw8BFAgADP8DUgGnBAADQQFyA8MB+AMFAQcEAAz/A3AB2wwAEP8DfwHlBAADXQHDAwUBBwQADP8DcAHb
        CAADAwEEAyoBQANWAdkDAAH/A0AB8QNQAZ4DJgE5AxABFQM1AVYDVwHCAx0B+QMAAf8DUwGtAxUBHQgA
        AwMBBAMqAUADVgHZAwAB/wNRAacDGgEkAxIBGQMNAREDNQFWA1cBwgMdAfkDAAH/A1MBrQMVAR0QAAz/
        A1IBpwwADP8DtAH2FAAI/wN/AeUQAAz/A7IB9RQAAxsBJgNQAaQDDgH9AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DVgHoA0IBdQMEAQUQAAMkATYDWQHXA1QBqwMRARcDTgGZAx0B+wMAAf8DAAH/AwAB/wNWAegDQgF1
        AwQBBRgAA5UB7xz/Az0BZxgABP8DfwHlBAADXwHMFP8DPAFmIAADHwEtA0kBiANVAbIDVgG+A1IBqANA
        AXADEAEVFAADFgEfA1QBqwNSAaYDBQEHAxMBGgNIAYMDVgGzA1YBvgNSAagDQAFvAxABFSgAAzYBWQNw
        AdsD0wH7A1gBvAMQARUcAAT/A38B5QgAAzcBWwNyAd4D0wH7A1gBuwMQARVYAAMSARgDMwFTAxIBGHgA
        A1kBv/8A/wA2AAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAD/wH5B/8B8QP/
        AfsB+AEPAfgBAQP/AfMB4AEHAeABAwHwAQ8B8AEHAYABAQGAAQEB4AEDAeABCwGAAQABgAEAAcMB4QHD
        AZEBgAEAAYABAAGEASEBhAEhAYABAAGAAQABhAEgAYQBYAGAAQABgAEAAYQBIAGEAaABgAEAAYABAAHC
        ASEBwQEhAYABAQGAAQEB4QHDAeMBwwHgAQMBwAEDAfABBwHkAQcB+AEPAYABDwH8AR8BzAEfAv8BjwP/
        Ad8R/ws=
</value>
  </data>
</root>