<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        BwAAAk1TRnQBSQFMAgEBBAEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AlgADDAEQAwABAfQA
        AyQBNgNHAY4DGQEjeAAE/xwAAwMBBAMdASkDOAFeA0EBcQMyAU8DEQEXAwABASQAAwMBBAMdASkDOAFe
        A0EBcgMyAVADEQEXAycBOgM5AdcDTgGkAw4BE3QABP8DxwHlFwABAQM1AVgDUQG9AxkB+gMAAf8DAAH/
        AwAB/wMzAe4DUAGfAyABLxsAAQEDNQFYA1EBvQMZAfoDAAH/AwAB/wMAAf8DMgHuAygB9ANUAasDBQEH
        GAADDAEQGP8D1wHuIAADDAEQHP8DxwHlEwABAQMVAR0DSwGeAwAB/wMLAfkDOwHSA0sBkgNCAXQDTwGm
        AysB4wMGAf0DMQHzAzgBXgMKAQ0LAAEBAxUBHQNLAZ4DAAH/AwsB+QM7AdIDSwGSA0IBdANNAccDFAH1
        A04BpwMRARcDJwE6AwoBDRAAA8sB5wz/AzYBVAMFAQcDcgGmDP8DIwEzFAADywHnDP8DNgFUAwQBBQN7
        AbAE/wPHAeUEAAMiATIMAAMUARsDTAGhAxQB9gMAAf8DSQHDAyABLwMtAUUDQgF8AyIBMQM3AVsDKwHj
        AwAB/wMhAeoDOQFgAwMBBAQAAxQBGwNMAaEDFAH2AwAB/wNJAcMDIAEvAy0BRQNCAXwDRQHAA0wBoAMc
        AScDSgGZAzYB5QM5AWADBAEFCAAD4AHxDP8UAAz/Ax4BKgwAA+AB8Qz/DAAE/wPHAeUEAAOgAc0E/wMf
        ASwIAAM+AW0DFQH2AwAB/wMAAf8DNQFWAzkBXgM7AdsDCQH9A0gBswMiATEDTgGnAwAB/wMAAf8DQAHX
        AyYBOAQAAz4BbQMVAfYDAAH/AwAB/wM1AVYDOQFeAzsB2wMJAf0DTAGcAxYBHwNAAXADEQH7AwAB/wNA
        AdcDJgE5BAADLQFDDP8EAAMFAQcM/wQAA3IBpgz/CAADLQFDDP8EAAMFAQcI/wPHAeUEAANiAZQM/wgA
        A0wBzQMAAf8DAAH/AwAB/wMQARUDRAGlAwAB/wMAAf8DCQH9A0IBfANCAXQDAAH/AwAB/wMAAf8DSAGP
        BAADTAHNAwAB/wMAAf8DAAH/AxABFQNEAaUDAAH/A1EB5QMHAQkDBAEGA0IBdAMAAf8DAAH/AwAB/wNI
        AZAEABD/BAAD7QH4DP8EAAMFAQcM/wOWAccEABD/BAAD7QH4BP8DxwHlCAADBAEFDP8DnQHKBAADSAGP
        AwgB/QMAAf8DAAH/AyYBOQNCAX0DEwH0AwAB/wM7AdsDLQFFA0wBkwMAAf8DAAH/AyQB7gMzAVQEAANI
        AY8DCAH9AwAB/wMAAf8DOwFlA0MBxgNLAZ0DBwEJAz8BbAMoAT0DTAGTAwAB/wMAAf8DJAHuAzMBVAQA
        A6cB0gz/BAADSQFyDP8EAAM2AVQM/wMAAQEEAAOuAdYM/wQABP8DxwHlBAADnQHLBAADNgFUDP8DAAEB
        BAADIAEvA0kBxAMKAfwDAAH/A0sBngMgAS4DQgF9A0QBpQM5AV4DIAEvAzsB0gMAAf8DFAH2A0kBkgMP
        ARQEAAMhATADSAHFAwoB/AMAAf8DOQHmA0wBoAMWAR8DGgEkAzUBVgMgAS8DOwHSAwAB/wMUAfYDSQGS
        Aw8BFAgADP8DcgGnBAADSQFyA+0B+AMFAQcEAAz/A7cB2wwAEP8DxwHlBAADkgHDAwUBBwQADP8DtwHb
        CAADAwEEAyoBQAM3AdkDAAH/AyAB8QNLAZ4DJgE5AxABFQM1AVYDSAHCAwsB+QMAAf8DTwGtAxUBHQgA
        AwMBBAMqAUADNwHZAwAB/wNOAacDGgEkAxIBGQMNAREDNQFWA0gBwgMLAfkDAAH/A08BrQMVAR0QAAz/
        A3IBpwwADP8D5wH2FAAI/wPHAeUQAAz/A+cB9RQAAxsBJgNQAaQDCAH9AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DRAHoA0IBdQMEAQUQAAMkATYDOQHXA1QBqwMRARcDSgGZAxEB+wMAAf8DAAH/AwAB/wNEAegDQgF1
        AwQBBRgAA9kB7xz/A0EBZxgABP8DxwHlBAADnwHMFP8DQQFmIAADHwEtA0kBiANNAbIDPwG+A08BqANA
        AXADEAEVFAADFgEfA0sBqwNPAaYDBQEHAxMBGgNIAYMDSwGzAz8BvgNPAagDQAFvAxABFSgAAzkBWQO3
        AdsD8wH7A4gBvAMQARUcAAT/A8cB5QgAAzsBWwO5Ad4D8wH7A4gBuwMQARVYAAMSARgDNAFTAxIBGHgA
        A40Bv/8A/wA2AAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAD/wH5B/8B8QP/
        AfsB+AEPAfgBAQP/AfMB4AEHAeABAwHwAQ8B8AEHAYABAQGAAQEB4AEDAeABCwGAAQABgAEAAcMB4QHD
        AZEBgAEAAYABAAGEASEBhAEhAYABAAGAAQABhAEgAYQBYAGAAQABgAEAAYQBIAGEAaABgAEAAYABAAHC
        ASEBwQEhAYABAQGAAQEB4QHDAeMBwwHgAQMBwAEDAfABBwHkAQcB+AEPAYABDwH8AR8BzAEfAv8BjwP/
        Ad8R/ws=
</value>
  </data>
</root>